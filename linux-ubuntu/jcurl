#!/bin/bash

### jcurl version 2.1 
### created by Jef
### This intended for his own use.

list1=$2

downloadrepo="/jack/downloads"

if [[ ! -d "$downloadrepo"   ]]; then
	mkdir "$downloadrepo"
fi

if [[ ! -d "$downloadrepo"/youtube   ]]; then
	mkdir "$downloadrepo"/youtube
fi

cd "$downloadrepo"

if [[ $1 = "-l"  ]]; then
for i in $(cat "$list1")
	do
  filename1=$(basename "$2")

  if [ ! -f $filename1 ]; then
  echo "`date`: $filename1 not exist... Will download the file."
  fi

  size_remote1=$(curl -sI "$2" | awk '/Content-Length/ { print $2 }')
  size_local1=$(stat -c %s "$filename1")

  x=$(echo $size_remote1 | awk '{ byte = $1 /1024/1024 ; print byte "MB" }')
  y=$(echo $size_local1 | awk '{ byte = $1 /1024/1024 ; print byte "MB" }')

  echo "`date`: Filename is $filename1. Remote file size is $x. Local file is $y"

  if [ "$x" = "$y" ]
  then
  echo "`date`: Local file, $filename1 is same as remote file. Skipping download..."
  exit 0
  fi

  echo "`date`: Downloading $i"
  curl --progress-bar -O -J -L $i &
  echo "`date`: Finished downloading..."
	done
fi

if [[ $1 = "-s"  ]]; then
    filename1=$(basename $2)

    if [ ! -f $filename1 ]; then
    echo "`date`: $filename1 not exist... Will download the file."
    fi

    size_remote1=$(curl -sI "$2" | awk '/Content-Length/ { print $2 }')
    size_local1=$(stat -c %s $filename1)

    x=$(echo $size_remote1 | awk '{ byte = $1 /1024/1024 ; print byte "MB" }')
    y=$(echo $size_local1 | awk '{ byte = $1 /1024/1024 ; print byte "MB" }')

    echo "`date`: Filename is $filename1. Remote file size is $x. Local file is $y"

    if [ "$x" = "$y" ]
    then
    echo "`date`: Local file, $filename1 is same as remote file. Skipping download..."
    exit 0
    fi

    echo "`date`: Downloading $2"
		curl --progress-bar -O -J -L $2 &
		echo "`date`: Finished downloading..."
fi

if [[ $1 = "-y"  ]]; then
		yt_fn1=$(youtube-dl --get-filename $2)
		filename1=$(basename "$yt_fn1")
		extension="${filename1##*.}"
		filename2="${filename1%.*}"
		cd "$downloadrepo"/youtube
		echo "`date`: Downloading $filename2.m4a..."
		youtube-dl -F $2
		youtube-dl -f 140 $2
		ffmpeg -i "$filename2".m4a -vn -c:a copy "$filename2"B.m4a
		aacgain -r -p -k -t "$filename2"B.m4a
		rm "$filename2".m4a
		mv "$filename2"B.m4a "$filename2".m4a
		echo "`date`: Finished downloading "$filename2".m4a..."
fi

if [[ $1 = "-yc"  ]]; then
    yt_fn1=$(youtube-dl --get-filename $2)
		filename1=$(basename "$yt_fn1")
		extension="${filename1##*.}"
		filename2="${filename1%.*}"
    cd "$downloadrepo"/youtube
		echo "`date`: Downloading $filename2.m4a..."
    youtube-dl -F $2
    youtube-dl -f 140 $2
    ffmpeg -ss 00:$3 -i "$filename2".m4a -t 00:$4 -vn -c:a copy "$filename2"B.m4a
		aacgain -r -p -k -t "$filename2"B.m4a
    rm "$filename2".m4a
		mv "$filename2"B.m4a "$filename2".m4a
    echo "`date`: Finished downloading "$filename2".m4a..."
fi

if [[ $1 = "-yl"  ]]; then
for i in $(cat "$list1")
	do
  yt_fn1=$(youtube-dl --get-filename $i)
  filename1=$(basename "$yt_fn1")
  extension="${filename1##*.}"
  filename2="${filename1%.*}"
  cd "$downloadrepo"/youtube
  echo "`date`: Downloading $filename2.m4a..."
  youtube-dl -F $i
  youtube-dl -f 140 $i
  ffmpeg -i "$filename2".m4a -vn -c:a copy "$filename2"B.m4a
  aacgain -r -p -k -t "$filename2"B.m4a
  rm "$filename2".m4a
  mv "$filename2"B.m4a "$filename2".m4a
  echo "`date`: Finished downloading "$filename2".m4a..."
	done
fi

exit 0
